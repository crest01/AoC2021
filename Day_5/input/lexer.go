// Code generated by re2c 2.2 on Sun Dec  5 23:40:10 2021, DO NOT EDIT.
//go:generate re2go ./$GOFILE.re -o ./$GOFILE --no-debug-info
package input

import (
	"strconv"
	"strings"
)

func asInt(str *string, start int, end int) int {
	substr := (*str)[start : end]
	val, err := strconv.Atoi(substr)
	if err != nil {
		panic(err)
	}
	return val
}

// Pad string with YYMAXFILL zeroes at the end.
func pad(str string) string {
	var YYMAXFILL int = 2

	return str + strings.Repeat("\000", YYMAXFILL)
}

func lex(str string) []int { // Go code
	var cursor int
	limit := len(str)
	var values []int
	var s, e int
	var yyt1 int
	var YYMAXFILL int = 2


loop:
	
{
	var yych byte
	if (limit - cursor < 2) {
		panic("yfill")
	}
	yych = str[cursor]
	switch (yych) {
	case 0x00:
		goto yy2
	case '\n':
		goto yy6
	case ' ':
		fallthrough
	case ',':
		goto yy8
	case '-':
		goto yy11
	case '1':
		fallthrough
	case '2':
		fallthrough
	case '3':
		fallthrough
	case '4':
		fallthrough
	case '5':
		fallthrough
	case '6':
		fallthrough
	case '7':
		fallthrough
	case '8':
		fallthrough
	case '9':
		yyt1 = cursor
		goto yy12
	default:
		goto yy4
	}
yy2:
	cursor += 1
	{ 
		if limit - cursor == YYMAXFILL - 1 {
			return values
		} else {
			panic("parse error!")
		}
	}
yy4:
	cursor += 1
yy5:
	{ panic("default rule!") }
yy6:
	cursor += 1
	{ goto loop }
yy8:
	cursor += 1
	if (limit - cursor < 1) {
		panic("yfill")
	}
	yych = str[cursor]
	switch (yych) {
	case ' ':
		fallthrough
	case ',':
		goto yy8
	default:
		goto yy10
	}
yy10:
	{ goto loop }
yy11:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '>':
		goto yy15
	default:
		goto yy5
	}
yy12:
	cursor += 1
	if (limit - cursor < 1) {
		panic("yfill")
	}
	yych = str[cursor]
	switch (yych) {
	case '0':
		fallthrough
	case '1':
		fallthrough
	case '2':
		fallthrough
	case '3':
		fallthrough
	case '4':
		fallthrough
	case '5':
		fallthrough
	case '6':
		fallthrough
	case '7':
		fallthrough
	case '8':
		fallthrough
	case '9':
		goto yy12
	default:
		goto yy14
	}
yy14:
	s = yyt1
	e = cursor
	{
		values = append(values, asInt(&str, s, e))
		goto loop
	}
yy15:
	cursor += 1
	{goto loop }
}

}
